on:
  push:
    # Enable when testing release infrastructure on a branch.
    # branches:
    # - ag/release
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

name: Create Release

jobs:
  publish:
    name: ${{ matrix.os }} for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-musleabihf
          - arm-unknown-linux-musleabihf
          - x86_64-pc-windows-msvc
          - aarch64-pc-windows-msvc
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-unknown-freebsd
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            release_name: linux-x86_64
            cross: true
            strip: true
            compress: true

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            release_name: linux-aarch64
            cross: true
            strip: false
            compress: true

          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
            release_name: linux-armv7
            cross: true
            strip: false
            compress: true

          - os: ubuntu-latest
            target: arm-unknown-linux-musleabihf
            release_name: linux-arm
            cross: true
            strip: false
            compress: true

          - os: windows-latest
            target: i686-pc-windows-msvc
            release_name: windows-i686
            cross: true
            strip: true
            compress: false
            ext: .exe

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            release_name: windows-x86_64
            cross: false
            strip: true
            compress: true
            ext: .exe

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            release_name: windows-aarch64
            cross: true
            strip: true
            compress: false
            ext: .exe

          - os: macos-latest
            target: x86_64-apple-darwin
            release_name: macos-x86_64
            cross: false
            strip: true
            compress: true

          - os: macos-latest
            target: aarch64-apple-darwin
            release_name: macos-aarch64
            cross: false
            strip: true
            compress: true

          - os: ubuntu-latest
            target: x86_64-unknown-freebsd
            release_name: freebsd-x86_64
            cross: true
            strip: false
            compress: false
    env:
      artifact: ./target/${{ matrix.target }}/release/mc-utils${{ matrix.ext }}
      release_name: mc-utils-$tag-${{ matrix.release_name }}${{ matrix.ext }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          override: true

      - run: sudo apt install musl-tools
        if: matrix.os == 'ubuntu-latest'

      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target=${{ matrix.target }}
          use-cross: ${{ matrix.cross }}

      # - name: Compress binaries
      #   uses: svenstaro/upx-action@v2
      #   with:
      #     file: ${{ env.artifact }}
      #     args: --lzma
      #     strip: ${{ matrix.strip }}
      #   if: ${{ matrix.compress }}

      - name: Rename binary
        run: mv "${{ env.artifact }}" "${{ env.release_name }}"

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.release_name }}
          generate_release_notes: true
